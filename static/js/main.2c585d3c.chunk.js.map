{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","draggable","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA8BeA,MA5Bf,YAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAOjD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBACEE,UAAU,QACVC,IAAKL,EAAKK,IACVC,IAAI,aACJC,UAAU,UAEZ,qBACEH,UAAU,OACVC,IAAI,kBACJG,QAlBY,WACbL,GACHF,EAAaD,IAiBTM,IAAI,YACJC,UAAU,gBCnBdE,EAAa,CACjB,CAAE,IAAO,qBAAsBC,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,oBAAqBA,SAAS,IAwE1BC,MArEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBkB,EAAjB,KAEMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC3B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB4B,GAAIH,KAAKC,cACtCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAGLf,EAAe,SAACD,GACpBiB,EAAYG,EAAapB,GAAQkB,EAAalB,IAGhD6B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUZ,MAAQc,EAAUd,KAC9BS,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA3B,GACnB,OAAIA,EAAKK,MAAQY,EAAUZ,IAClB,2BAAKL,GAAZ,IAAkBU,SAAS,IACjBV,QAGhB+B,KACKC,YAAW,kBAAMD,MAAa,QAEtC,CAACd,EAAWE,IAEf,IAAMY,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAS,OAAIA,EAAY,KAClCZ,GAAY,IAOd,OAJAQ,qBAAU,WACRP,MACC,IAGD,sBAAKlB,UAAU,MAAf,UACE,6CACA,wBAAQI,QAASc,EAAjB,sBAEA,qBAAKlB,UAAU,YAAf,SACGS,EAAMc,KAAI,SAAA3B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASiB,GAAajB,IAASmB,GAAanB,EAAKU,QAC1DP,SAAUA,GAJLH,EAAK4B,SAQhB,wCAAWb,SCxEjBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c585d3c.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nfunction SingleCard({ card, handleChoice, flipped, disabled }) {\r\n  const handleClick = () => {\r\n    if (!disabled) {\r\n      handleChoice(card)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        <img\r\n          className=\"front\"\r\n          src={card.src}\r\n          alt=\"card front\"\r\n          draggable=\"false\"\r\n        />\r\n        <img\r\n          className=\"back\"\r\n          src=\"./img/cover.png\"\r\n          onClick={handleClick}\r\n          alt=\"card back\"\r\n          draggable=\"false\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleCard;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { \"src\": \"./img/helmet-1.png\", matched: false },\n  { \"src\": \"./img/potion-1.png\", matched: false },\n  { \"src\": \"./img/ring-1.png\", matched: false },\n  { \"src\": \"./img/scroll-1.png\", matched: false },\n  { \"src\": \"./img/shield-1.png\", matched: false },\n  { \"src\": \"./img/sword-1.png\", matched: false }\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }))\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src)\n              return { ...card, matched: true }\n            else return card\n          })\n        })\n        resetTurn()\n      } else setTimeout(() => resetTurn(), 1000)\n    }\n  }, [choiceOne, choiceTwo])\n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}